repositories {
    maven { url "http://download.java.net/maven/2/" }
}
apply from: JAVA_SCRIPT

configurations {
    jacoco //Configuration Group used by Sonar to provide Code Coverage using JaCoCo
}

idea.module.excludeDirs = [
        file('.gradle'),
        file('build/classes'),
        file('build/tmp'),
        file('build/dependency-cache'),
        file('build/libs')]

sourceSets {
    generated {
        java {
            srcDirs = ['build/generated-src']
        }
    }
}

ext.springSecurityVersion='3.0.5.RELEASE'

dependencies {
    compile 	project(":spring-ldap-test"),
                project(":spring-ldap-core-tiger")

    compile "com.mysema.querydsl:querydsl-apt:$queryDslVersion"

    compile("org.springframework.security:spring-security-core:$springSecurityVersion") {
        exclude group: "org.springframework", module: "spring-expression"
        exclude group: "org.springframework", module: "spring-core"
        exclude group: "org.springframework", module: "spring-context"
        exclude group: "org.springframework", module: "spring-tx"
        exclude group: "org.springframework", module: "spring-aop"
    }

    provided	"commons-pool:commons-pool:$commonsPoolVersion",
                "org.springframework:spring-jdbc:$springVersion",
                "org.springframework:spring-orm:$springVersion"

    testCompile "org.springframework:spring-test:$springVersion",
                "org.springframework:spring-aop:$springVersion",
                "org.springframework:spring-expression:$springVersion",
                "org.hibernate:hibernate-core:4.3.1.Final",
                "org.aspectj:aspectjrt:1.8.0.M1",
                "org.aspectj:aspectjweaver:1.8.0.M1",
                "org.hsqldb:hsqldb:2.3.2",
                "junit:junit:$junitVersion",
                "org.springframework.security:spring-security-config:$springSecurityVersion",
                "org.slf4j:slf4j-log4j12:$slf4jVersion"


    testCompile("org.springframework.security:spring-security-ldap:$springSecurityVersion") {
        exclude group: "org.springframework.ldap", module: "spring-ldap-core"
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor", "org.springframework.ldap.repository.support.LdapAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

ideaModule.dependsOn generateQueryDSL

idea {
    module {
        sourceDirs += file('build/generated-src')
    }
}

dependencies {
    jacoco group: "org.jacoco", name: "org.jacoco.agent", version: "0.6.2.201302030002", classifier: "runtime"
}

test {
    jvmArgs "-javaagent:${configurations.jacoco.asPath}=destfile=$projectDir/../../core/build/jacoco.exec,includes=org.springframework.*"
    systemProperties = System.properties
}

